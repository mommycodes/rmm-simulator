import streamlit as st
import time
from datetime import datetime, timedelta

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —á–µ–∫-–ª–∏—Å—Ç–∞ —Å —Ä–∞–∑–¥–µ–ª–∞–º–∏ –∏ –±–∞–ª–ª–∞–º–∏ ===
# –°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π: –ö–ª–∞—Å—Å–∏–∫–∞ (70+), –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π (70+), –õ—É–¥–∫–∞ (60+)
CHECKLIST_SECTIONS = {
    "üåä –í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑": {
        "5 –≤–æ–ª–Ω –ø–æ –∫–∞–Ω–æ–Ω—É (3 –Ω–µ —Å–∞–º–∞—è –∫–æ—Ä–æ—Ç–∫–∞—è, —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ü–∏–π)": (18, "–û—Å–Ω–æ–≤–∞ —Å–µ—Ç–∞–ø–∞ - –ü–†–ò–û–†–ò–¢–ï–¢", "‚ö†Ô∏è –ö—Ä–æ–º–µ 5 –≤–æ–ª–Ω –≤ –∫–æ—Ä—Ä–µ–∫—Ü–∏—è—Ö –º–µ–Ω—å—à–µ–≥–æ –¢–§"),
        "–£–¥–ª–∏–Ω–µ–Ω–∏–µ –ø–æ –§–∏–±–æ–Ω–∞—á—á–∏ 161-227": (9, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç—Ä–µ–Ω–¥–∞", "‚ö†Ô∏è –°–∏–ª—å–Ω—ã–µ –≤—ã–±—Ä–æ—Å—ã —Ü–µ–Ω—ã –º–æ–≥—É—Ç –∏—Å–∫–∞–∑–∏—Ç—å –ø—Ä–æ–µ–∫—Ü–∏—é"),
        "–£–¥–ª–∏–Ω–µ–Ω–∏–µ –ø–æ –§–∏–±–æ–Ω–∞—á—á–∏ 227-261": (9, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç—Ä–µ–Ω–¥–∞", "‚ö†Ô∏è –°–∏–ª—å–Ω—ã–µ –≤—ã–±—Ä–æ—Å—ã —Ü–µ–Ω—ã –º–æ–≥—É—Ç –∏—Å–∫–∞–∑–∏—Ç—å –ø—Ä–æ–µ–∫—Ü–∏—é"),
        "5 –≤–æ–ª–Ω + –Ω–∞–∫–ª–æ–Ω–∫–∞ –≤ 5–π + —Ä–µ—Ç–µ—Å—Ç —Ñ–∏–±—ã 50% (—Ñ–ª–∞–≥)": (10, "–ò–¥–µ–∞–ª—å–Ω—ã–π —Å–µ—Ç–∞–ø", "‚ö†Ô∏è –õ–æ–∂–Ω—ã–µ –ø—Ä–æ–±–æ–∏ –ø—Ä–∏ –Ω–∏–∑–∫–æ–π –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏"),
    },
    "üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑": {
        "–ü—Ä–æ–±–∏—Ç–∏–µ –ª–∏–Ω–∏–∏ —Ç—Ä–µ–Ω–¥–∞": (7, "–ö–ª—é—á–µ–≤–æ–π —Å–∏–≥–Ω–∞–ª —Å–º–µ–Ω—ã –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "‚ö†Ô∏è –õ–æ–∂–Ω—ã–µ –ø—Ä–æ–±–æ–∏ –ø—Ä–∏ –±–æ–∫–æ–≤–∏–∫–µ"),
        "–î–≤–∏–∂–µ–Ω–∏–µ –ø–æ —Ç—Ä–µ–Ω–¥—É": (7, "–°–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã–º —Ç—Ä–µ–Ω–¥–æ–º", "‚ö†Ô∏è –¢—Ä–µ–Ω–¥ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω —Å—Ç–∞—Ä—à–∏–º–∏ –¢–§"),
        "–î–≤–∏–∂–µ–Ω–∏–µ –ø–æ —Ç—Ä–µ–Ω–¥—É —Å BTC": (4, "–ê–ª—å—Ç—ã —Å–ª–µ–¥—É—é—Ç –∑–∞ BTC", "‚ö†Ô∏è –ù–µ –≤—Ö–æ–¥–∏—Ç—å –µ—Å–ª–∏ BTC –¥–≤–∏–∂–µ—Ç—Å—è –∞–Ω–æ–º–∞–ª—å–Ω–æ"),
        "–î–≤–∏–∂–µ–Ω–∏–µ –≤ –∑–æ–Ω—ã –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏ (50x / 100x)": (2, "–¶–µ–Ω–∞ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ —Å—Ç–æ–ø–∞–º –∏ –ª–∏–∫–≤–∏–¥–∞—Ü–∏—è–º", "‚ö†Ô∏è –ù–µ –≤—Ö–æ–¥–∏—Ç—å –µ—Å–ª–∏ –æ–±—ä–µ–º—ã –∏ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å —Å–ª–∏—à–∫–æ–º –∞–Ω–æ–º–∞–ª—å–Ω—ã–µ"),
    },
    "üí° Smart Money": {
        "–°–∏–≥–Ω–∞–ª –æ—Ç Student –Ω–∞ 1 –º–∏–Ω—É—Ç–∫–µ": (4, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ 3 –≤–æ–ª–Ω—ã", "‚ö†Ô∏è –°–ª–∞–±—ã–π —Ç—Ä–µ–Ω–¥ ‚Äî —Å–∏–≥–Ω–∞–ª –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–æ–∂–Ω—ã–º"),
        "SMT-–¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏—è": (4, "–†–∞–Ω–Ω–∏–π —Å–∏–≥–Ω–∞–ª —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞", "‚ö†Ô∏è –ü–†–ò –°–ò–õ–¨–ù–û–ú –ò–ú–ü–£–õ–¨–°–ï/–ü–†–û–õ–ò–í–ï –î–ò–í–ï–† –ù–ï –†–ê–ë–û–¢–ê–ï–¢"),
        "–î–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏—è RSI": (2, "–†–∞–Ω–Ω–∏–π —Å–∏–≥–Ω–∞–ª", "‚ö†Ô∏è –ü–†–ò –°–ò–õ–¨–ù–û–ú –ò–ú–ü–£–õ–¨–°–ï/–ü–†–û–õ–ò–í–ï –î–ò–í–ï–† –ù–ï –†–ê–ë–û–¢–ê–ï–¢"),
        "–î–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏—è CCI": (2, "–†–∞–Ω–Ω–∏–π —Å–∏–≥–Ω–∞–ª", "‚ö†Ô∏è –ü–†–ò –°–ò–õ–¨–ù–û–ú –ò–ú–ü–£–õ–¨–°–ï/–ü–†–û–õ–ò–í–ï –î–ò–í–ï–† –ù–ï –†–ê–ë–û–¢–ê–ï–¢"),
        "–î–µ–π—Å—Ç–≤–∏–µ –ü–†–û–¢–ò–í —Ç–æ–ª–ø—ã": (6, "–û–∂–∏–¥–∞–Ω–∏—è —Ç–æ–ª–ø—ã - –¥–µ–π—Å—Ç–≤—É–µ–º –Ω–∞–æ–±–æ—Ä–æ—Ç", "‚ö†Ô∏è –ï—Å–ª–∏ —Å—Ç—Ä–∞—Ö –≤—ã—Å–æ–∫ - –ø–æ–∫—É–ø–∞–µ–º, –µ—Å–ª–∏ –∂–∞–¥–Ω–æ—Å—Ç—å –≤—ã—Å–æ–∫–∞ - –ø—Ä–æ–¥–∞–µ–º"),
    },
    "üíß –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –∏ –æ–±—ä—ë–º—ã": {
        "–§–∞–Ω–¥–∏–Ω–≥ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π": (5, "–§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä", "‚ö†Ô∏è –£—á–∏—Ç—ã–≤–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–Ω–¥–∏–Ω–≥–∞"),
        "–û–±—ä–µ–º—ã –Ω–∞ —Ç–µ–∫—É—â–µ–º –¢–§": (4, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Å–∏–ª—É –¥–≤–∏–∂–µ–Ω–∏—è", "‚ö†Ô∏è –û–±—ä–µ–º –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–æ–∂–Ω—ã–º –ø—Ä–∏ –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö –≤—ã–±—Ä–æ—Å–∞—Ö"),
    },
    "üõ°Ô∏è –†–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã": {
        "–ù–ï –ö–ò–ù–ñ–ê–õ": (2, "–¶–µ–Ω–∞ –ù–ï –¥–æ–ª–∂–Ω–∞ –¥–≤–∏–≥–∞—Ç—å—Å—è —Ä–µ–∑–∫–∏–º–∏ —Ç–µ–Ω—è–º–∏ –±–µ–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã", "‚ö†Ô∏è –õ–æ–∂–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã –ø—Ä–∏ –≤—Å–ø–ª–µ—Å–∫–∞—Ö –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏"),
        "–ë–æ–ª–µ–µ 1,5% TakeProfit": (3, "–¶–µ–ª—å —Å–¥–µ–ª–∫–∏ ‚Äî –∞–¥–µ–∫–≤–∞—Ç–Ω–æ–µ RR", "‚ö†Ô∏è –ù–µ –≤—Ö–æ–¥–∏—Ç—å –µ—Å–ª–∏ RR —Å–ª–∏—à–∫–æ–º –º–∞–ª –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π"),
        "–†–ú–ú —Å–æ–±–ª—é–¥–µ–Ω 1:1 –ú–ò–ù–ò–ú–£–ú": (4, "–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∏—Å–∫/–ø—Ä–∏–±—ã–ª—å –Ω–µ –º–µ–Ω–µ–µ 1:1", "‚ö†Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏"),
    }
}

# –ü–æ—Ä–æ–≥–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π —Ç–æ—Ä–≥–æ–≤–ª–∏
TRADING_LEVELS = {
    "–ö–ª–∞—Å—Å–∏–∫–∞": 70,
    "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π": 70, 
    "–õ—É–¥–∫–∞": 60
}

MAX_SCORE = sum(weight for section in CHECKLIST_SECTIONS.values() for weight, _, _ in section.values())

def render_checklist_entry():
    st.markdown("<h2 style='text-align:center;'>üõ°Ô∏è –ß–µ–∫-–ª–∏—Å—Ç —Ç—Ä–µ–π–¥–µ—Ä–∞</h2>", unsafe_allow_html=True)
    st.caption("‚ö° –ó–∞–ø–æ–ª–Ω–∏ —á–µ–∫-–ª–∏—Å—Ç, –ø–æ–¥–æ–∂–¥–∏ 10 –º–∏–Ω—É—Ç –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –≤—Ö–æ–¥–∏ –≤ —Å–¥–µ–ª–∫—É ‚Äî –Ω–µ —Å–ø–µ—à–∏, –ª–∏–∫–≤–∏–¥–∞—Ü–∏—è –≤—Å–µ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–µ–∑–∞–º–µ—Ç–Ω–æ")

    # --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è ---
    if "checklist" not in st.session_state:
        st.session_state.checklist = {key: False for section in CHECKLIST_SECTIONS.values() for key in section.keys()}
    if "evaluated" not in st.session_state:
        st.session_state.evaluated = False
    if "timer_end" not in st.session_state:
        st.session_state.timer_end = None
    if "timer_started" not in st.session_state:
        st.session_state.timer_started = False

    # --- –ß–µ–∫–ª–∏—Å—Ç ---
    st.markdown("### üìã –û—Ç–º–µ—Ç—å —É—Å–ª–æ–≤–∏—è –≤—Ö–æ–¥–∞")
    total_score = 0
    for section_name, items in CHECKLIST_SECTIONS.items():
        st.markdown(f"<hr style='border:1px solid #ddd; margin:10px 0'>", unsafe_allow_html=True)
        st.markdown(f"<h4 style='font-weight:bold; color:#2e7d32; margin-bottom:5px;'>{section_name}</h4>", unsafe_allow_html=True)
        for key, (weight, hint, warning) in items.items():
            tooltip = f"{hint}\n{warning}" if warning else hint
            
            checked = st.checkbox(
                f"{key}", 
                value=st.session_state.checklist[key], 
                help=tooltip,
                key=key
            )
            st.session_state.checklist[key] = checked
            if checked:
                total_score += weight


    # --- –ö–Ω–æ–ø–∫–∞ –æ—Ü–µ–Ω–∫–∏ —Å–¥–µ–ª–∫–∏ ---
    if st.button("üìä –û—Ü–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É"):
        st.session_state.evaluated = True
        percent = int((total_score / MAX_SCORE) * 100)

        st.markdown("### üìà –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–¥–µ–ª–∫–∏")
        progress_bar = st.progress(0)
        status = st.empty()

        for i in range(percent + 1):
            progress_bar.progress(i)
            status.text(f"–ó–∞–ø–æ–ª–Ω—è–µ–º —á–µ–∫-–ª–∏—Å—Ç: {i}%")
            time.sleep(0.02)

        st.markdown(f"<h3 style='text-align:center;'>üéØ –ë–∞–ª–ª—ã: <b>{total_score}/{MAX_SCORE}</b> ({percent}%)</h3>", unsafe_allow_html=True)

        # --- –ê–Ω–∞–ª–∏–∑ –ø–æ —É—Ä–æ–≤–Ω—è–º —Ç–æ—Ä–≥–æ–≤–ª–∏ ---
        st.markdown("### üéöÔ∏è –ê–Ω–∞–ª–∏–∑ –ø–æ —É—Ä–æ–≤–Ω—è–º —Ç–æ—Ä–≥–æ–≤–ª–∏")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            classic_threshold = TRADING_LEVELS["–ö–ª–∞—Å—Å–∏–∫–∞"]
            classic_passed = total_score >= classic_threshold
            classic_color = "rgba(16,185,129,0.15)" if classic_passed else "rgba(239,68,68,0.15)"
            classic_text = "‚úÖ –ü–†–û–ô–î–ï–ù" if classic_passed else "‚ùå –ù–ï –ü–†–û–ô–î–ï–ù"
            st.markdown(f"""
            <div style='background-color:{classic_color}; padding:10px; border-radius:8px; text-align:center; margin:5px; color:#FFFFFF;'>
                <h4>üìö –ö–ª–∞—Å—Å–∏–∫–∞</h4>
                <p><b>{total_score}/{classic_threshold}</b></p>
                <p>{classic_text}</p>
            </div>
            """, unsafe_allow_html=True)
        
        with col2:
            advanced_threshold = TRADING_LEVELS["–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π"]
            advanced_passed = total_score >= advanced_threshold
            advanced_color = "rgba(16,185,129,0.15)" if advanced_passed else "rgba(239,68,68,0.15)"
            advanced_text = "‚úÖ –ü–†–û–ô–î–ï–ù" if advanced_passed else "‚ùå –ù–ï –ü–†–û–ô–î–ï–ù"
            st.markdown(f"""
            <div style='background-color:{advanced_color}; padding:10px; border-radius:8px; text-align:center; margin:5px; color:#FFFFFF;'>
                <h4>üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π</h4>
                <p><b>{total_score}/{advanced_threshold}</b></p>
                <p>{advanced_text}</p>
            </div>
            """, unsafe_allow_html=True)
        
        with col3:
            ludka_threshold = TRADING_LEVELS["–õ—É–¥–∫–∞"]
            ludka_passed = total_score >= ludka_threshold
            ludka_color = "rgba(16,185,129,0.15)" if ludka_passed else "rgba(239,68,68,0.15)"
            ludka_text = "‚úÖ –ü–†–û–ô–î–ï–ù" if ludka_passed else "‚ùå –ù–ï –ü–†–û–ô–î–ï–ù"
            st.markdown(f"""
            <div style='background-color:{ludka_color}; padding:10px; border-radius:8px; text-align:center; margin:5px; color:#FFFFFF;'>
                <h4>üé≤ –õ—É–¥–∫–∞</h4>
                <p><b>{total_score}/{ludka_threshold}</b></p>
                <p>{ludka_text}</p>
            </div>
            """, unsafe_allow_html=True)

        # --- –û–±—â–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è ---
        st.markdown("### üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è")
        
        if total_score >= TRADING_LEVELS["–ö–ª–∞—Å—Å–∏–∫–∞"]:
            color, msg = ("rgba(59,130,246,0.15)", "üöÄ –°–¥–µ–ª–∫–∞ —à–∏–∫–∞—Ä–Ω–∞—è! –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏")
            text_color = "#FFFFFF"
            st.balloons()
        elif total_score >= TRADING_LEVELS["–õ—É–¥–∫–∞"]:
            color, msg = ("rgba(16,185,129,0.15)", "‚úÖ –°–¥–µ–ª–∫–∞ —Ö–æ—Ä–æ—à–∞—è ‚Äî –º–æ–∂–Ω–æ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å")
            text_color = "#FFFFFF"
        elif total_score >= 50:
            color, msg = ("rgba(245,158,11,0.15)", "‚öñÔ∏è –°–¥–µ–ª–∫–∞ —Å—Ä–µ–¥–Ω—è—è ‚Äî –ø–æ–¥—É–º–∞–π –µ—â—ë —Ä–∞–∑")
            text_color = "#FFFFFF"
        else:
            color, msg = ("rgba(239,68,68,0.15)", "‚ùå –°–¥–µ–ª–∫–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–∞—è ‚Äî –ª—É—á—à–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
            text_color = "#FFFFFF"

        st.markdown(
            f"<div style='background-color:{color}; padding:15px; border-radius:12px; text-align:center; font-size:1.2rem; font-weight:bold; color:{text_color};'>{msg}</div>",
            unsafe_allow_html=True
        )
        
        # --- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ---
        st.markdown("---")
        st.markdown("### üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        
        if total_score < TRADING_LEVELS["–õ—É–¥–∫–∞"]:
            missing_points = TRADING_LEVELS["–õ—É–¥–∫–∞"] - total_score
            st.warning(f"‚ö†Ô∏è –î–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç {missing_points} –±–∞–ª–ª–æ–≤")
            st.info("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–∂–¥–∞—Ç—å—Å—è –ª—É—á—à–µ–≥–æ —Å–µ—Ç–∞–ø–∞ –∏–ª–∏ –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –≤—Ö–æ–¥–∞")
        elif total_score >= TRADING_LEVELS["–ö–ª–∞—Å—Å–∏–∫–∞"]:
            st.success("üéâ –û—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ç–∞–ø! –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
        else:
            st.info("üëç –•–æ—Ä–æ—à–∏–π —Å–µ—Ç–∞–ø, –Ω–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å")

    # --- –¢–∞–π–º–µ—Ä ---
    if all(st.session_state.checklist.values()):
        if not st.session_state.timer_started:
            if st.button("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä ‚è≥"):
                st.session_state.timer_end = datetime.now() + timedelta(minutes=10)
                st.session_state.timer_started = True

    if st.session_state.timer_started and st.session_state.timer_end:
        st.markdown("### ‚è≥ –¢–∞–π–º–µ—Ä")
        timer_container = st.empty()
        progress_container = st.empty()

        remaining = st.session_state.timer_end - datetime.now()
        if remaining.total_seconds() > 0:
            for seconds_left in range(int(remaining.total_seconds()), -1, -1):
                mins, secs = divmod(seconds_left, 60)
                progress = 1 - seconds_left / (10 * 60)
                progress_container.progress(progress)
                timer_container.markdown(
                    f"<div style='text-align:center; font-size:1.8rem; color:#2e7d32; font-weight:bold; margin-top:0.5em;'>‚è≥ –ñ–¥—ë–º <b>{mins:02d}:{secs:02d}</b> –º–∏–Ω—É—Ç</div>",
                    unsafe_allow_html=True
                )
                time.sleep(1)

        timer_container.empty()
        progress_container.empty()
        st.success("üöÄ –í—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –ú–æ–∂–Ω–æ –≤—Ö–æ–¥–∏—Ç—å –≤ —Å–¥–µ–ª–∫—É.")

    # --- –ü—Ä–∏–º–µ—Ä—ã —Å–¥–µ–ª–æ–∫ ---
    st.markdown("### üìä –ü—Ä–∏–º–µ—Ä—ã —Å–¥–µ–ª–æ–∫")
    st.image("https://i.postimg.cc/rsPGT5JB/2025-08-09-113211.png", use_container_width=True)
    st.image("https://i.postimg.cc/C5zGr99C/APTUSDT-P-2025-09-09-20-18-27-b4ea3.png", use_container_width=True)
    st.image("https://i.postimg.cc/s2KWVs3j/APTUSDT-P-2025-08-27-11-29-26-04e6f.png", use_container_width=True)
    st.image("https://i.postimg.cc/kXwWrhF8/image.png", use_container_width=True)
    st.image("https://i.postimg.cc/2y13NSGP/APTUSDT-P-2025-08-29-19-31-48-04275.png", use_container_width=True)
