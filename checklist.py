import streamlit as st
import time
from datetime import datetime, timedelta

def render_checklist_entry():
    st.markdown("## üõ°Ô∏è –í—Ö–æ–¥ –≤ —Å–¥–µ–ª–∫—É")
    st.caption("‚ö° –ó–∞–ø–æ–ª–Ω–∏ —á–µ–∫-–ª–∏—Å—Ç, –ø–æ–¥–æ–∂–¥–∏ 10 –º–∏–Ω—É—Ç –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –≤—Ö–æ–¥–∏ –≤ —Å–¥–µ–ª–∫—É - –Ω–µ —Å–ø–µ—à–∏, –ª–∏–∫–≤–∏–¥–∞—Ü–∏—è –≤—Å–µ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–µ–∑–∞–º–µ—Ç–Ω–æ")
    st.image("https://i.postimg.cc/rsPGT5JB/2025-08-09-113211.png", use_column_width=True)

    # --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è ---
    if "checklist" not in st.session_state:
        st.session_state.checklist = {
            "–ü—Ä–æ–±–∏—Ç–∏–µ –Ω–∞–∫–ª–æ–Ω–∫–∏": False,
            "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã—Ö–æ–¥ –û–ë–™–ï–ú–û–í": False,
            "–î–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏—è –Ω–∞ 1—á –¢–§": False,
            "CCI –≤ –∑–æ–Ω–µ ~200 –∏–ª–∏ -200": False,
            "CCRSII –≤ –∑–æ–Ω–µ ~20 –∏–ª–∏ ~80": False,
            "–ü—Ä–æ—à–ª–æ 5 –≤–æ–ª–Ω –≤ 261,8%": False,
            "–ù–ï –õ–û–í–ò–ú –ö–ò–ù–ñ–ê–õ–´": False,
        }
    if "all_done" not in st.session_state:
        st.session_state.all_done = False
    if "timer_end" not in st.session_state:
        st.session_state.timer_end = None
    if "timer_started" not in st.session_state:
        st.session_state.timer_started = False

    # --- –ß–µ–∫–ª–∏—Å—Ç ---
    if not st.session_state.all_done:
        st.markdown("### üìã –ß–µ–∫-–ª–∏—Å—Ç")
        for key in st.session_state.checklist.keys():
            checkbox = st.checkbox(
                f"‚úÖ {key}" if st.session_state.checklist[key] else f"‚ö†Ô∏è {key}",
                value=st.session_state.checklist[key],
                key=key
            )
            st.session_state.checklist[key] = checkbox

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å
        if all(st.session_state.checklist.values()):
            st.session_state.all_done = True
            st.success("üéØ –í—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")
    
    # --- –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–∞ ---
    if st.session_state.all_done and not st.session_state.timer_started:
        if st.button("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä ‚è≥"):
            st.session_state.timer_end = datetime.now() + timedelta(minutes=1)
            st.session_state.timer_started = True

    # --- –¢–∞–π–º–µ—Ä —Å –æ–±—Ä–∞—Ç–Ω—ã–º –æ—Ç—Å—á–µ—Ç–æ–º ---
    if st.session_state.timer_started and st.session_state.timer_end:
        st.markdown("### ‚è≥ –¢–∞–π–º–µ—Ä")
        timer_container = st.empty()
        progress_container = st.empty()

        remaining = st.session_state.timer_end - datetime.now()
        if remaining.total_seconds() > 0:
            for seconds_left in range(int(remaining.total_seconds()), -1, -1):
                mins, secs = divmod(seconds_left, 60)
                progress = 1 - seconds_left / (1 * 60)
                progress_container.progress(progress)
                timer_container.markdown(
                    f"""
                    <div style='
                        text-align:center; 
                        font-size:1.8rem; 
                        color:#2e7d32; 
                        font-weight:bold;
                        margin-top:0.5em;
                    '>
                        ‚è≥ –û–∂–∏–¥–∞–µ–º <b>{mins:02d}:{secs:02d}</b> –º–∏–Ω—É—Ç
                    </div>
                    """,
                    unsafe_allow_html=True
                )
                time.sleep(1)

        # –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏
        timer_container.empty()
        progress_container.empty()
        st.success("üöÄ –í—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –ú–æ–∂–Ω–æ –≤—Ö–æ–¥–∏—Ç—å –≤ —Å–¥–µ–ª–∫—É.")