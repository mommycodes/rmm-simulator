import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
WEB_APP_URL = os.getenv('WEB_APP_URL')

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard = [
        [InlineKeyboardButton("üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã", web_app=WebAppInfo(url=f"{WEB_APP_URL}/calculators"))],
        [InlineKeyboardButton("üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑", web_app=WebAppInfo(url=f"{WEB_APP_URL}/ta"))],
        [InlineKeyboardButton("üåä –í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑", web_app=WebAppInfo(url=f"{WEB_APP_URL}/waves"))],
        [InlineKeyboardButton("üé≤ –°–∏–º—É–ª—è—Ç–æ—Ä", web_app=WebAppInfo(url=f"{WEB_APP_URL}/simulator"))],
        [InlineKeyboardButton("üß† –¶–µ–ø–∏ –ú–∞—Ä–∫–æ–≤–∞", web_app=WebAppInfo(url=f"{WEB_APP_URL}/markov"))],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_text = """
üöÄ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ RMM Trading Tools!**

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:

üßÆ **–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã** - —Ä–∞—Å—á–µ—Ç —Ä–∏—Å–∫–æ–≤ –∏ –æ–±—ä–µ–º–æ–≤
üìä **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑** - –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –¢–ê
üåä **–í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑** - —Ç–µ–æ—Ä–∏—è –≤–æ–ª–Ω –≠–ª–ª–∏–æ—Ç–∞
üé≤ **–°–∏–º—É–ª—è—Ç–æ—Ä** - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
üß† **–¶–µ–ø–∏ –ú–∞—Ä–∫–æ–≤–∞** - –∞–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤

–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –Ω—É–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç!
    """
    
    await update.message.reply_text(
        welcome_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üìö **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**

/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/calculators - –û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã
/analysis - –û—Ç–∫—Ä—ã—Ç—å –∞–Ω–∞–ª–∏–∑

üîß **–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:**
‚Ä¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∏—Å–∫–æ–≤
‚Ä¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ–±—ä–µ–º–æ–≤ –ø–æ SL
‚Ä¢ –°–∏–º—É–ª—è—Ç–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
‚Ä¢ –ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
    """
    await update.message.reply_text(help_text, parse_mode='Markdown')

async def calculators(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞–º"""
    keyboard = [
        [InlineKeyboardButton("üßÆ –û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã", web_app=WebAppInfo(url=f"{WEB_APP_URL}/calculators"))]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üßÆ **–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã RMM**\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–≤:",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def analysis(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–î–æ—Å—Ç—É–ø –∫ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º"""
    keyboard = [
        [InlineKeyboardButton("üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑", web_app=WebAppInfo(url=f"{WEB_APP_URL}/ta"))],
        [InlineKeyboardButton("üåä –í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑", web_app=WebAppInfo(url=f"{WEB_APP_URL}/waves"))],
        [InlineKeyboardButton("üß† –¶–µ–ø–∏ –ú–∞—Ä–∫–æ–≤–∞", web_app=WebAppInfo(url=f"{WEB_APP_URL}/markov"))],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üìä **–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã**\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–Ω–∞–ª–∏–∑–∞:",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    if not BOT_TOKEN:
        logger.error("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("calculators", calculators))
    application.add_handler(CommandHandler("analysis", analysis))
    application.add_handler(CallbackQueryHandler(button_callback))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()
