import streamlit as st
import os

from modules.calculators import render_rmm_calculators
from modules.montecarlo import render_monte_carlo
from modules.editor import render_editable_page
from modules.markov_interface import render_markov_analysis
from modules.pattern_analyzer import render_pattern_analyzer
from modules.signal_detector import render_signal_detector
from modules.coin_summary import render_coin_summary
from dotenv import load_dotenv
from checklist import render_checklist_entry

load_dotenv()

st.set_page_config(layout="wide", page_title="MOMMY CODES")

if "authenticated" not in st.session_state:
    st.session_state.authenticated = False
if "key_input" not in st.session_state:
    st.session_state.key_input = ""
if "error_msg" not in st.session_state:
    st.session_state.error_msg = ""

def get_app_key():
    key = os.getenv("APP_KEY")
    if key:
        return key
    try:
        return st.secrets["APP_KEY"]
    except Exception:
        return None

APP_KEY = get_app_key()

if not st.session_state.authenticated:
    st.markdown("""
    <style>
      .auth-card {max-width: 420px; margin: 8vh auto 0; padding: 16px;}
      @media (max-width: 480px) {
        .auth-card {margin-top: 6vh; padding: 12px;}
      }
    </style>
    """, unsafe_allow_html=True)

    if APP_KEY is None:
        st.error("APP_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤ .env –∏–ª–∏ .streamlit/secrets.toml")
        st.stop()

    with st.container():
        st.markdown("<div class='auth-card'>", unsafe_allow_html=True)
        st.markdown("### üîë –í—Ö–æ–¥")
        with st.form("auth_form", clear_on_submit=False):
            pwd = st.text_input(
                "–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞",
                type="password",
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥",
                label_visibility="collapsed",
            )
            submitted = st.form_submit_button("–í–æ–π—Ç–∏", use_container_width=True)
        if submitted:
            if pwd == APP_KEY:
                st.session_state.authenticated = True
                st.rerun()
            else:
                st.error("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ ‚ùå")
        st.markdown("</div>", unsafe_allow_html=True)
    st.stop()

PAGES = [
    ("üåä –í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑", "waves"),
    ("üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑", "ta"),
    ("üìà –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã", "indicators"),
    ("üéØ –°—Ç—Ä–∞—Ç–µ–≥–∏–∏", "strategies"),
    ("üñºÔ∏è –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å–∫—Ä–∏–Ω–æ–≤", "screens"),
]

SIDEBAR_TOOLS = [
    ("üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã", "calculators"),
    ("üé≤ –°–∏–º—É–ª—è—Ç–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–π", "simulator"),
    ("üß† –¶–µ–ø–∏ –ú–∞—Ä–∫–æ–≤–∞", "markov"),
]

if "page" not in st.session_state:
    st.session_state.page = "coin_summary"

st.sidebar.markdown("### üìò –ú–∞—Ç–µ—Ä–∏–∞–ª—ã")

for label, key in PAGES:
    if key == "ta":
        with st.sidebar.expander("üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑", expanded=(st.session_state.page.startswith("ta"))):
            if st.button("üìò –û–±—â–∏–µ –ø–æ–Ω—è—Ç–∏—è", key="nav_ta_general", use_container_width=True):
                st.session_state.page = "ta_general"
            if st.button("üïØ –°–≤–µ—á–Ω–æ–π –∞–Ω–∞–ª–∏–∑", key="nav_ta_candles", use_container_width=True):
                st.session_state.page = "ta_candles"
            if st.button("üìà –¢—Ä–µ–Ω–¥—ã –∏ –ª–∏–Ω–∏–∏ —Ç—Ä–µ–Ω–¥–∞", key="nav_ta_trends", use_container_width=True):
                st.session_state.page = "ta_trends"
            if st.button("üí• –ü—Ä–æ–±–æ–∏", key="nav_ta_breakouts", use_container_width=True):
                st.session_state.page = "ta_breakouts"
            if st.button("üìè –°–∫–ª–∞–¥–Ω–æ–π –º–µ—Ç—Ä", key="nav_ta_ruler", use_container_width=True):
                st.session_state.page = "ta_ruler"
            if st.button("üî∑ –§–∏–≥—É—Ä—ã —Ç–µ—Ö. –∞–Ω–∞–ª–∏–∑–∞", key="nav_ta_patterns", use_container_width=True):
                st.session_state.page = "ta_patterns"
    elif key == "waves":
        with st.sidebar.expander("üåä –í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑", expanded=(st.session_state.page.startswith("waves"))):
            if st.button("üìà –ò–º–ø—É–ª—å—Å", key="nav_waves_impulse", use_container_width=True):
                st.session_state.page = "waves_impulse"
            if st.button("üîÑ –ö–æ—Ä—Ä–µ–∫—Ü–∏—è", key="nav_waves_correction", use_container_width=True):
                st.session_state.page = "waves_correction"
            if st.button("üìú –û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞", key="nav_waves_rules", use_container_width=True):
                st.session_state.page = "waves_rules"
            if st.button("üî¢ –§–∏–±–æ–Ω–∞—á—á–∏", key="nav_waves_fibo", use_container_width=True):
                st.session_state.page = "waves_fibo"
            if st.button("üìê –ö–ª–∏–Ω—ã", key="nav_waves_wedges", use_container_width=True):
                st.session_state.page = "waves_wedges"
            if st.button("üéØ –°–µ—Ç–∞–ø—ã", key="nav_waves_setups", use_container_width=True):
                st.session_state.page = "waves_setups"
    elif key == "screens":
        with st.sidebar.expander("üñºÔ∏è –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å–∫—Ä–∏–Ω–æ–≤", expanded=(st.session_state.page.startswith("screens"))):
            screen_subpages = [
                ("üìä –ü—è—Ç–∏–≤–æ–ª–Ω–æ–≤–∫–∏", "screens_5waves"),
                ("1Ô∏è‚É£‚Äì2Ô∏è‚É£ –í–æ–ª–Ω—ã", "screens_1_2"),
                ("3Ô∏è‚É£ –í–æ–ª–Ω–∞", "screens_3"),
                ("üìê –ö–ª–∏–Ω—ã", "screens_wedges"),
                ("üîÑ –ö–æ—Ä—Ä–µ–∫—Ü–∏–∏", "screens_corrections"),
                ("üî∑ –§–∏–≥—É—Ä—ã —Ç–µ—Ö. –∞–Ω–∞–ª–∏–∑–∞", "screens_patterns"),
                ("üìà –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã", "screens_indicators"),
                ("üìú –ü—Ä–∞–≤–∏–ª–∞", "screens_rules"),
                ("üîó –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏", "screens_dependencies")
            ]
            for name, key_sub in screen_subpages:
                if st.button(name, key=f"nav_{key_sub}", use_container_width=True):
                    st.session_state.page = key_sub
    else:
        if st.sidebar.button(label, key=f"nav_{key}", use_container_width=True):
            st.session_state.page = key

st.sidebar.markdown("---")
st.sidebar.markdown("### üß≠ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–¥–µ–ª–∫–µ")
col_a, col_b = st.sidebar.columns(2)
with col_a:
    if st.button("üìò –ü—Ä–∞–≤–∏–ª–∞", key="nav_home_pre", use_container_width=True):
        st.session_state.page = "home"
with col_b:
    if st.button("üõ°Ô∏è –í–•–û–î –≤ —Å–¥–µ–ª–∫—É", key="nav_checklist_pre", use_container_width=True):
        st.session_state.page = "checklist"

if st.sidebar.button("üß≠ –°–≤–æ–¥–∫–∞ –ø–æ –º–æ–Ω–µ—Ç–µ", key="nav_coin_summary_pre", use_container_width=True):
    st.session_state.page = "coin_summary"

st.sidebar.markdown("---")
st.sidebar.markdown("### üõ†Ô∏è –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")

for label, key in SIDEBAR_TOOLS:
    if st.sidebar.button(label, key=f"tool_{key}", use_container_width=True):
        st.session_state.page = key

st.sidebar.markdown("---")

def render_home():
    st.markdown("## üìò –ü—Ä–∞–≤–∏–ª–∞ —Ç—Ä–µ–π–¥–∏–Ω–≥–∞")
    st.info("‚ú® –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π –±–∞–∑–æ–≤—ã–π —Å–≤–æ–¥ –ø—Ä–∞–≤–∏–ª")

    rules = [
        ("‚ùå", "**–°—Ç–æ–ø-—Ç–æ—Ä–≥–∏** –ø–æ—Å–ª–µ 3 —É–±—ã—Ç–æ—á–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ ‚Äî –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ—Ä–≥–æ–≤–ª—é –Ω–∞ –¥–µ–Ω—å, —á—Ç–æ–±—ã –Ω–µ —Å–≥–æ—Ä–µ—Ç—å"),
        ("‚öñÔ∏è", "**RR –º–∏–Ω–∏–º—É–º 3:1** ‚Äî –∫–∞–∂–¥–∞—è –ø—Ä–∏–±—ã–ª—å –º–∏–Ω–∏–º—É–º –≤ 3 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ —É–±—ã—Ç–∫–∞"),
        ("üìã", "**–¢–æ—Ä–≥–æ–≤—ã–π –ø–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å** ‚Äî –æ—Ñ–æ—Ä–º–ª—è–µ–º –ø–æ —á–µ–∫-–ª–∏—Å—Ç—É"),
        ("üìì", "**–í–µ–¥–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–∏–∫–∞ —Å–¥–µ–ª–æ–∫** –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"),
        ("üíµ", "**–û–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Ä–∏—Å–∫ –≤ $** –Ω–∞ —Å–¥–µ–ª–∫—É (2%)"),
        ("üìâ", "**–ù–µ –ø—Ä–µ–≤—ã—à–∞—Ç—å –æ–±—ä—ë–º** ‚Äî —Ä–∏—Å–∫–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –º–∞–ª–æ–π —á–∞—Å—Ç—å—é –¥–µ–ø–æ–∑–∏—Ç–∞"),
        ("üßØ", "**–ü–µ—Ä–µ—Ä—ã–≤ 2‚Äì3 –Ω–µ–¥–µ–ª–∏** –ø—Ä–∏ –ø—Ä–æ—Å–∞–¥–∫–µ > 20% –∑–∞ –º–µ—Å—è—Ü"),
        ("‚úÖ", "**–ó–∞–∫—Ä—ã—Ç–∏–µ –¥–Ω—è** –ø—Ä–∏ –ø—Ä–∏–±—ã–ª–∏ 2‚Äì5%")
    ]

    for emoji, text in rules:
        st.markdown(
            f"{emoji} {text}",
            unsafe_allow_html=True
        )

    st.markdown("---")
    st.markdown("### üéØ –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ –∂–∏–∑–Ω–µ—Å–ø–æ—Å–æ–±–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è")
    st.markdown(
        "<ul>"
        "<li>üìà <b>RR ‚â• 3:1</b></li>"
        "<li>üéØ <b>Winrate ‚â• 35%</b></li>"
        "</ul>",
        unsafe_allow_html=True
    )
    st.markdown(
        "üß† –î–∞–∂–µ –ø—Ä–∏ <b>65% —É–±—ã—Ç–æ—á–Ω—ã—Ö —Å–¥–µ–ª–∫–∞—Ö</b> –º–æ–∂–Ω–æ –≤—ã–∂–∏—Ç—å, –µ—Å–ª–∏ —Å–æ–±–ª—é–¥–∞—Ç—å —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∏—Å–∫–∞ –∏ –ø—Ä–∏–±—ã–ª–∏!",
        unsafe_allow_html=True
    )

current = st.session_state.page

if current == "home":
    render_home()
elif current == "ta_general":
    render_editable_page("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ ‚Äî –û–±—â–∏–µ –ø–æ–Ω—è—Ç–∏—è")
elif current == "ta_candles":
    render_editable_page("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ ‚Äî –°–≤–µ—á–Ω–æ–π –∞–Ω–∞–ª–∏–∑")
elif current == "ta_trends":
    render_editable_page("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ ‚Äî –¢—Ä–µ–Ω–¥—ã –∏ –ª–∏–Ω–∏–∏ —Ç—Ä–µ–Ω–¥–∞")
elif current == "ta_breakouts":
    render_editable_page("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ ‚Äî –ü—Ä–æ–±–æ–∏")
elif current == "ta_ruler":
    render_editable_page("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ ‚Äî –°–∫–ª–∞–¥–Ω–æ–π –º–µ—Ç—Ä")
elif current == "ta_patterns":
    render_editable_page("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ ‚Äî –§–∏–≥—É—Ä—ã —Ç–µ—Ö. –∞–Ω–∞–ª–∏–∑–∞")
elif current == "indicators":
    render_editable_page("–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã")
elif current == "waves":
    render_editable_page("–í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑")
elif current == "waves_impulse":
    render_editable_page("–í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑ ‚Äî –ò–º–ø—É–ª—å—Å")
elif current == "waves_correction":
    render_editable_page("–í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑ ‚Äî –ö–æ—Ä—Ä–µ–∫—Ü–∏—è")
elif current == "waves_rules":
    render_editable_page("–í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑ ‚Äî –û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞")
elif current == "waves_fibo":
    render_editable_page("–í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑ ‚Äî –§–∏–±–æ–Ω–∞—á—á–∏")
elif current == "waves_wedges":
    render_editable_page("–í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑ ‚Äî –ö–ª–∏–Ω—ã")
elif current == "waves_setups":
    render_editable_page("–í–æ–ª–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑ ‚Äî –°–µ—Ç–∞–ø—ã")
elif current == "strategies":
    render_editable_page("–°—Ç—Ä–∞—Ç–µ–≥–∏–∏")
elif current.startswith("screens"):
    parts = current.split("_", 1)
    if len(parts) == 1:
        render_editable_page("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å–∫—Ä–∏–Ω–æ–≤")
    else:
        render_editable_page(f"–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å–∫—Ä–∏–Ω–æ–≤ ‚Äî {parts[1].capitalize()}")
elif current == "calculators":
    render_rmm_calculators()
elif current == "simulator":
    render_monte_carlo()
elif current == "checklist":
    render_checklist_entry()
elif current == "markov":
    render_markov_analysis()
elif current == "wave_analyzer":
    from modules.wave_analysis import WaveAnalysis
    wave_analysis = WaveAnalysis()
    wave_analysis.render_wave_analysis_interface()
elif current == "pattern_analyzer":
    render_pattern_analyzer()
elif current == "signal_detector":
    render_signal_detector()
elif current == "coin_summary":
    render_coin_summary()

st.markdown("---")
st.markdown("### üì¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
st.markdown("""
<div style='display: flex; align-items: center; gap: 1rem;'>
    <img src='https://avatars.githubusercontent.com/u/134078363?v=4' width='60' height='60' style='border-radius: 50%; border: 2px solid #ccc;' />
    <div>
        <p style='margin: 0; font-size: 16px;'>
            –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: <b>@mommycodes</b>  
        </p>
        <p style='margin: 0; font-size: 14px;'>
            üì¨ Telegram: <a href='https://t.me/mommycodes' target='_blank'>—Å–≤—è–∑–∞—Ç—å—Å—è</a> |
            üêô GitHub: <a href='https://github.com/mommycodes/rmm-simulator/issues' target='_blank'>—Å–æ–∑–¥–∞—Ç—å issue</a>
        </p>
    </div>
</div>
""", unsafe_allow_html=True)

st.caption("üí° –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ–º–æ–≥–∞–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Å–∏–º—É–ª—è—Ç–æ—Ä –ª—É—á—à–µ. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ!")